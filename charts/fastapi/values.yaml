# -- Number of replicas to spin up
replicaCount: 1

# -- Secret used to store Docker registry credentials
imagePullSecrets: []

# -- Overrides release name
nameOverride: ""

# -- Overrides full release name
fullnameOverride: ""

# -- Service Account configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use
  name: ""

# -- Annotations to add to the pods
podAnnotations: {}

# -- Labels to add to the pods
podLabels: {}

# -- Security context for the pod
podSecurityContext: {}
# fsGroup: 2000

ingress:
  # -- Enables ingress when true
  enabled: false
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  
# -- FastAPI-specific configurations
fastapi:
  image:
    # -- FastAPI Docker image repository
    repository: my-fastapi-image
    # -- Tag of the FastAPI image
    tag: latest
    # -- Image pull policy (Always, IfNotPresent, Never)
    pullPolicy: IfNotPresent

  # -- Security context for the FastAPI container
  securityContext: {}

  # -- Resource limits and requests for the FastAPI container
  resources: {}

  # -- Environment variables configuration
  env:
    # -- Key-value pairs of environment variables (will be base64 encoded in the secret)
    variables: {}
    envFromSecretsManager:
      # -- Enable fetching secrets from an external secrets manager (e.g., AWS)
      enabled: false
      # -- Path to the secret in the external secrets manager
      secretPath: "path/to/secret"

  # -- Liveness probe configuration for FastAPI
  livenessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10

  # -- Readiness probe configuration for FastAPI
  readinessProbe:
    httpGet:
      path: /health
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10

  # -- Additional volume mounts for FastAPI container
  volumeMounts: []

  # -- Additional volumes for FastAPI pods
  volumes: []

  # -- Configuration for FastAPI workers
  workers: []
  #    - name: celery
  #      enabled: true
  #      containerCommand:
  #        - "celery"
  #        - "-A"
  #        - "proj"
  #        - "worker"
  #        - "--loglevel=INFO"
  #      extraVolumes: [ ]
  #      # - name: worker-volume-1
  #      #   secret:
  #      #     secretName: worker-volume-1-conf
  #      extraVolumeMounts: [ ]
  #      #  - name: worker-volume-1
  #      #    mountPath: /opt/worker/conf
  #      #    readOnly: true
  #      resources: { }
  #      # We usually recommend not to specify default resources and to leave this as a conscious
  #      # choice for the user. This also increases chances charts run on environments with little
  #      # resources, such as Minikube. If you do want to specify resources, uncomment the following
  #      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #      # limits:
  #      #   cpu: 100m
  #      #   memory: 128Mi
  #      # requests:
  #      #   cpu: 100m
  #      #   memory: 128Mi
  #      replicaCount: 1
  #      autoscaling:
  #        enabled: false
  #        minReplicas: 1
  #        maxReplicas: 100
  #        targetCPUUtilizationPercentage: 80
  #        # targetMemoryUtilizationPercentage: 80
  #      livenessProbe:
  #        httpGet:
  #          path: /
  #          port: http
  #      readinessProbe:
  #        httpGet:
  #          path: /
  #          port: http
  #      nodeSelector: [ ]
  #      # app.kubernetes.io/env: "production"
  #      # app.kubernetes.io/worker: "true"
  #      tolerations: [ ]
  #      affinity: { }

# -- NginX-specific configurations
nginx:
  image:
    # -- NginX Docker image repository
    repository: nginx
    # -- Tag of the NginX image
    tag: alpine
    # -- Image pull policy (Always, IfNotPresent, Never)
    pullPolicy: IfNotPresent

  # -- Security context for the NginX container
  securityContext: {}

  # -- Resource limits and requests for NginX container
  resources: {}

  # -- Liveness probe configuration for NginX
  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 10

  # -- Readiness probe configuration for NginX
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 10

  # -- Additional volume mounts for the NginX container
  volumeMounts: []

  # -- Additional volumes for the NginX pods
  volumes: []

# -- Node selector for pod placement
nodeSelector: {}

# -- Affinity rules for pod placement
affinity: {}

# -- Tolerations for pod placement
tolerations: []

# -- Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Service configuration
service:
  # -- Type of Kubernetes service (ClusterIP, NodePort, LoadBalancer)
  type: ClusterIP
  # -- Port exposed by the service
  port: 80
